/*
 * PhysicalClient: the socket-based physical client to issue requests and receive responses by multiple threads.
 *
 * Note that the requests are generated by an underlying workload (e.g., CacheBench).
 * The socket-based physical client just converts generated requests into network packets to test remote cache.
 * 
 * By Siyuan Sheng (2023.04.17).
 */

#ifndef CLIENT_H
#define CLIENT_H

#include <string>

namespace covered
{
    class PhysicalClient
    {
    public:
        // The UDP ports used by Client is [local_client_workload_startport, local_client_workload_startport + client_thread_cnt - 1]
        PhysicalClient(const uint16_t& local_client_workload_startport, const std::string& local_edge_node_ipstr, const uint32_t& client_thread_cnt);
        ~PhysicalClient();

        void start(const uint32_t& duration);
    private:
        static const std::string kClassName;

        uint16_t client_workload_port_;
        std::string local_edge_node_ipstr_;
        uint32_t client_thread_cnt_;
    };
}

#endif